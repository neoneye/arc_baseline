//
// This file is autogenerated from dsl.cpp, do not change.
//

std::unordered_map<std::string, data_type> string2enum = {
	{"copy_color_by_direction", COPY_COLOR_BY_DIRECTION},
	{"corner_check", CORNER_CHECK},
	{"nbh_check", NBH_CHECK},
	{"direct_check", DIRECT_CHECK},
	{"indirect_check", INDIRECT_CHECK},
	{"color_distribution", COLOR_DISTRIBUTION},
	{"flip", FLIP},
	{"rotate", ROTATE},
	{"distribute_from_border", DISTRIBUTE_FROM_BORDER},
	{"color_for_inners", COLOR_FOR_INNERS},
	{"draw_lines", DRAW_LINES},
	{"draw_line_to", DRAW_LINE_TO},
	{"distribute_colors", DISTRIBUTE_COLORS},
	{"unity", UNITY},
	{"split_by_h", SPLIT_BY_H},
	{"split_by_w", SPLIT_BY_W},
	{"map_color", MAP_COLOR},
	{"crop_empty", CROP_EMPTY},
	{"crop_figure", CROP_FIGURE},
	{"make_holes", MAKE_HOLES},
	{"gravity", GRAVITY},
	{"cells", CELLS},
	{"figures", FIGURES},
	{"nothing", NOTHING},
	{"color_figures", COLOR_FIGURES},
	{"cellwise_or", CELLWISE_OR},
	{"output_first", OUTPUT_FIRST},
	{"output_last", OUTPUT_LAST},
	{"align_pattern", ALIGN_PATTERN},
	{"reduce", REDUCE},
	{"macro_multiply", MACRO_MULTIPLY},
	{"top", TOP},
	{"bottom", BOTTOM},
	{"left", LEFT},
	{"right", RIGHT},
	{"top_left", TOP_LEFT},
	{"bottom_left", BOTTOM_LEFT},
	{"top_right", TOP_RIGHT},
	{"bottom_right", BOTTOM_RIGHT},
	{"everywhere", EVERYWHERE},
	{"horizontal", HORIZONTAL},
	{"vertical", VERTICAL},
	{"horver", HORVER},
	{"diagonal", DIAGONAL},
	{"none", NONE},
	{"border", BORDER},
	{"color", COLOR},
	{"biggest", BIGGEST},
	{"smallest", SMALLEST},
	{"all", ALL},
	{"index", INDEX},
	{"last", LAST},
	{"ver", VER},
	{"hor", HOR},
	{"or", OR},
	{"and", AND},
	{"equal", EQUAL},
	{"xor", XOR},
	{"global_rule", GLOBAL_RULE},
	{"global_interaction_rule", GLOBAL_INTERACTION_RULE},
	{"ca_rule", CA_RULE},
};

